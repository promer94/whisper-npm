name: CI
on: [push, pull_request]

jobs:
  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        target: ["aarch64-apple-darwin", "x86_64-apple-darwin"]
        include:
          - target: "aarch64-apple-darwin"
            build: |
              make UNAME_P=arm UNAME_M=arm64
          - target: "x86_64-apple-darwin"
            build: |
              make
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Dependencies
        run: |
          brew update
          brew install sdl2
      - name: Build
        run: |
          ${{ matrix.build }}
          mv ./whisper.cpp/main ./whisper.cpp/whisper-cli-${{ matrix.target }}
          mkdir dist
          cp ./whisper.cpp/whisper-cli-${{ matrix.target }} ./dist
          chmod +x ./dist/whisper-cli-${{ matrix.target }}
          cp ./whisper.cpp/models/download-ggml-model.sh ./dist

      - name: Upload binaries
        uses: actions/upload-artifact@v1
        with:
          name: whisper-${{ matrix.target }}
          path: dist
  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        build: [Release]
        arch: [Win32, x64]
        sdl2: [ON]
        include:
          - arch: Win32
            s2arc: x86
            target: i686-pc-windows-msvc
          - arch: x64
            s2arc: x64
            target: x86_64-pc-windows-msvc
          - sdl2: ON
            s2ver: 2.26.0

    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Fetch SDL2 and set SDL2_DIR
        if: matrix.sdl2 == 'ON'
        run: |
          C:/msys64/usr/bin/wget.exe -qO sdl2.zip https://github.com/libsdl-org/SDL/releases/download/release-${{ matrix.s2ver }}/SDL2-devel-${{ matrix.s2ver }}-VC.zip
          7z x sdl2.zip
          echo "SDL2_DIR=$env:GITHUB_WORKSPACE/SDL2-${{ matrix.s2ver }}/cmake" >> $env:GITHUB_ENV

      - name: Configure
        run: |
          cd ./whisper.cpp
          cmake -S . -B ./build -A ${{ matrix.arch }} -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DWHISPER_SUPPORT_SDL2=${{ matrix.sdl2 }}

      - name: Build
        run: |
          cd ./whisper.cpp/build
          msbuild ALL_BUILD.vcxproj -t:build -p:configuration=${{ matrix.build }} -p:platform=${{ matrix.arch }}

      - name: Copy SDL2.dll
        if: matrix.sdl2 == 'ON'
        run: copy "$env:SDL2_DIR/../lib/${{ matrix.s2arc }}/SDL2.dll" ./whisper.cpp/build/bin/${{ matrix.build }}

      - name: Copy model downloader
        if: matrix.sdl2 == 'ON'
        run: copy ./whisper.cpp/models/download-ggml-model.cmd ./whisper.cpp/build/bin/${{ matrix.build }}

      - name: Upload binaries
        if: matrix.sdl2 == 'ON'
        uses: actions/upload-artifact@v1
        with:
          name: whisper-bin-${{ matrix.target }}
          path: ./whisper.cpp/build/bin/${{ matrix.build }}
  publish:
    runs-on: ubuntu-latest
    needs: [build-mac, build-windows]
    steps:
      - uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
          registry-url: "https://registry.npmjs.org"
      - name: Install Dependencies
        shell: bash
        run: |
          corepack enable
          pnpm install
          pnpm build
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
      - name: Copy artifacts
        run: |
          cp -r ./artifacts/whisper-aarch64-apple-darwin ./npm/aarch64-apple-darwin
          cp -r ./artifacts/whisper-x86_64-apple-darwin ./npm/x86_64-apple-darwin
          cp -r ./artifacts/whisper-bin-i686-pc-windows-msvc/** ./npm/i686-pc-windows-msvc
          cp -r ./artifacts/whisper-bin-x86_64-pc-windows-msvc/** ./npm/x86_64-pc-windows-msvc

      - name: git status
        run: git status
      - name: Publish aarch64-apple-darwin
        run: |
          pnpm publish --access public --dry-run
        working-directory: npm/aarch64-apple-darwin
      - name: Publish x86_64-apple-darwin
        run: |
          pnpm publish --access public --dry-run
        working-directory: npm/x86_64-apple-darwin
      - name: Publish i686-pc-windows-msvc
        run: |
          pnpm publish --access public --dry-run
        working-directory: npm/i686-pc-windows-msvc
      - name: Publish x86_64-pc-windows-msvc
        run: |
          pnpm publish --access public --dry-run
        working-directory: npm/x86_64-pc-windows-msvc
      - name: Publish
        run: |
          pnpm publish --access public --dry-run

      
